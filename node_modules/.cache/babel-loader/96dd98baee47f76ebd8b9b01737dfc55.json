{"ast":null,"code":"var _jsxFileName = \"/home/conan/mars_rover/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\"; /// is on map\n// is valid position -- other rover there\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst commandLeft = direction => {\n  switch (direction) {\n    case \"N\":\n      return \"W\";\n\n    case \"S\":\n      return \"E\";\n\n    case \"E\":\n      return \"N\";\n\n    case \"w\":\n      return \"S\";\n\n    default:\n      return direction;\n  }\n};\n\nconst commandRight = direction => {\n  switch (direction) {\n    case \"N\":\n      return \"E\";\n\n    case \"S\":\n      return \"W\";\n\n    case \"E\":\n      return \"S\";\n\n    case \"w\":\n      return \"N\";\n\n    default:\n      return direction;\n  }\n};\n\nconst commandForward = currentRoverPosition => {\n  switch (currentRoverPosition.position) {\n    case \"N\":\n      return { ...currentRoverPosition,\n        y: currentRoverPosition.y + 1\n      };\n\n    case \"S\":\n      return { ...currentRoverPosition,\n        y: currentRoverPosition.y - 1\n      };\n\n    case \"E\":\n      return { ...currentRoverPosition,\n        x: currentRoverPosition.x + 1\n      };\n\n    case \"w\":\n      return { ...currentRoverPosition,\n        x: currentRoverPosition.x + 1\n      };\n\n    default:\n      return currentRoverPosition;\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"turnLeft\":\n      return { ...state,\n        currentRoverPosition: { ...state.currentRoverPosition,\n          position: commandLeft(state.currentRoverPosition.position)\n        }\n      };\n\n    case \"turnRight\":\n      return { ...state,\n        currentRoverPosition: { ...state.currentRoverPosition,\n          position: commandRight(state.currentRoverPosition.position)\n        }\n      };\n\n    case \"moveForward\":\n      return { ...state,\n        currentRoverPosition: { ...commandForward(state.currentRoverPosition)\n        }\n      };\n  }\n}\n\nconst isOnMap = (state, bounds) => {\n  // use the other functions for moving forward/left/right to determine\n  return true;\n};\n\nconst spaceIsEmpty = (existingRoversPosition, currentRoverPosition) => {\n  return true;\n};\n\nfunction App() {\n  _s();\n\n  ///// These will be done in the other file///////\n  const input = \"1 2 N | LMLMLMLMM\";\n  const maxTerrainSize = {\n    x: 5,\n    y: 5\n  };\n  const [startPostion, commands] = input.split(\"|\");\n  const [x, y, position] = startPostion.split(\" \");\n  const mainCommands = commands.split(\"\"); /// Really where it kicks off ///////\n\n  const [{\n    existingRoversPosition,\n    currentRoverPosition\n  }, dispatch] = useReducer(reducer, {\n    existingRoversPosition: [{\n      x: 1,\n      y: 2,\n      position: \"N\"\n    }],\n    currentRoverPosition: {\n      x: parseInt(x),\n      y: parseInt(y),\n      position: position\n    }\n  });\n  mainCommands.forEach(c => {\n    if (c === \"L\") {\n      dispatch({\n        type: \"turnLeft\"\n      });\n    } else if (c === \"R\") {\n      dispatch({\n        type: \"turnRight\"\n      });\n    } else if (c === \"M\") {\n      if (isOnMap(currentRoverPosition, maxTerrainSize) && spaceIsEmpty(currentRoverPosition, existingRoversPosition)) {\n        dispatch({\n          type: \"moveForward\"\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LAqOAn8o3gzTcxrgG5BvbQi1Ris=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/conan/mars_rover/src/App.tsx"],"names":["React","useReducer","commandLeft","direction","commandRight","commandForward","currentRoverPosition","position","y","x","reducer","state","action","type","isOnMap","bounds","spaceIsEmpty","existingRoversPosition","App","input","maxTerrainSize","startPostion","commands","split","mainCommands","dispatch","parseInt","forEach","c","logo"],"mappings":"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","sourcesContent":["import React, { Reducer, useReducer, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n/// is on map\n// is valid position -- other rover there\nconst commandLeft = (direction: string) => {\n  switch (direction) {\n    case \"N\":\n      return \"W\";\n    case \"S\":\n      return \"E\";\n    case \"E\":\n      return \"N\";\n    case \"w\":\n      return \"S\";\n    default:\n      return direction;\n  }\n};\n\nconst commandRight = (direction: string) => {\n  switch (direction) {\n    case \"N\":\n      return \"E\";\n    case \"S\":\n      return \"W\";\n    case \"E\":\n      return \"S\";\n    case \"w\":\n      return \"N\";\n    default:\n      return direction;\n  }\n};\n\nconst commandForward = (currentRoverPosition: Rovers) => {\n  switch (currentRoverPosition.position) {\n    case \"N\":\n      return {\n        ...currentRoverPosition,\n        y: currentRoverPosition.y + 1,\n      };\n    case \"S\":\n      return {\n        ...currentRoverPosition,\n\n        y: currentRoverPosition.y - 1,\n      };\n    case \"E\":\n      return {\n        ...currentRoverPosition,\n\n        x: currentRoverPosition.x + 1,\n      };\n    case \"w\":\n      return {\n        ...currentRoverPosition,\n\n        x: currentRoverPosition.x + 1,\n      };\n    default:\n      return currentRoverPosition;\n  }\n};\n\ntype Rovers = {\n  x: number;\n  y: number;\n  position: string;\n};\n\ntype State = {\n  existingRoversPosition: Rovers[];\n  currentRoverPosition: Rovers;\n};\n\ntype Action =\n  | { type: \"turnLeft\" }\n  | { type: \"turnRight\" }\n  | { type: \"moveForward\" };\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case \"turnLeft\":\n      return {\n        ...state,\n        currentRoverPosition: {\n          ...state.currentRoverPosition,\n          position: commandLeft(state.currentRoverPosition.position),\n        },\n      };\n    case \"turnRight\":\n      return {\n        ...state,\n        currentRoverPosition: {\n          ...state.currentRoverPosition,\n          position: commandRight(state.currentRoverPosition.position),\n        },\n      };\n    case \"moveForward\":\n      return {\n        ...state,\n        currentRoverPosition: {\n          ...commandForward(state.currentRoverPosition),\n        },\n      };\n  }\n}\n\nconst isOnMap = (state: Rovers, bounds: { x: number; y: number }) => {\n  // use the other functions for moving forward/left/right to determine\n  return true;\n};\n\nconst spaceIsEmpty = (\n  existingRoversPosition: Rovers,\n  currentRoverPosition: Rovers[]\n) => {\n  return true;\n};\nfunction App() {\n  ///// These will be done in the other file///////\n  const input = \"1 2 N | LMLMLMLMM\";\n  const maxTerrainSize = { x: 5, y: 5 };\n  const [startPostion, commands] = input.split(\"|\");\n  const [x, y, position] = startPostion.split(\" \");\n\n  const mainCommands = commands.split(\"\");\n  /// Really where it kicks off ///////\n  const [{ existingRoversPosition, currentRoverPosition }, dispatch] =\n    useReducer<Reducer<State, Action>>(reducer, {\n      existingRoversPosition: [\n        {\n          x: 1,\n          y: 2,\n          position: \"N\",\n        },\n      ],\n      currentRoverPosition: {\n        x: parseInt(x),\n        y: parseInt(y),\n        position: position,\n      },\n    });\n\n  mainCommands.forEach((c) => {\n    if (c === \"L\") {\n      dispatch({ type: \"turnLeft\" });\n    } else if (c === \"R\") {\n      dispatch({ type: \"turnRight\" });\n    } else if (c === \"M\") {\n      if (\n        isOnMap(currentRoverPosition, maxTerrainSize) &&\n        spaceIsEmpty(currentRoverPosition, existingRoversPosition)\n      ) {\n        dispatch({ type: \"moveForward\" });\n      }\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}