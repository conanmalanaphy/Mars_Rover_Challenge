{"ast":null,"code":"var _jsxFileName = \"/home/conan/mars_rover/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Direction } from \"./rover.types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst commandLeft = direction => {\n  switch (direction) {\n    case Direction.NORTH:\n      return Direction.WEST;\n\n    case Direction.SOUTH:\n      return Direction.EAST;\n\n    case Direction.EAST:\n      return Direction.NORTH;\n\n    case Direction.WEST:\n      return Direction.SOUTH;\n\n    default:\n      return direction;\n  }\n};\n\nconst commandRight = direction => {\n  switch (direction) {\n    case Direction.NORTH:\n      return Direction.EAST;\n\n    case Direction.SOUTH:\n      return Direction.WEST;\n\n    case Direction.EAST:\n      return Direction.SOUTH;\n\n    case Direction.WEST:\n      return Direction.NORTH;\n\n    default:\n      return direction;\n  }\n};\n\nconst commandForward = currentRoverPosition => {\n  switch (currentRoverPosition.position) {\n    case Direction.NORTH:\n      return { ...currentRoverPosition,\n        y: currentRoverPosition.y + 1\n      };\n\n    case Direction.SOUTH:\n      return { ...currentRoverPosition,\n        y: currentRoverPosition.y - 1\n      };\n\n    case Direction.EAST:\n      return { ...currentRoverPosition,\n        x: currentRoverPosition.x + 1\n      };\n\n    case Direction.WEST:\n      return { ...currentRoverPosition,\n        x: currentRoverPosition.x + 1\n      };\n\n    default:\n      return currentRoverPosition;\n  }\n};\n\nconst isOnMap = (state, bounds) => {\n  const newLocation = commandForward(state);\n  const xmax = newLocation.x <= bounds.x && newLocation.x >= 0;\n  const ymax = newLocation.y <= bounds.y && newLocation.y >= 0;\n  return ymax && xmax;\n};\n\nconst spaceIsEmpty = (existingRoversPosition, currentRoverPosition) => {\n  const newLocation = commandForward(currentRoverPosition); /// loop over and see if any of the other ones are there\n\n  const roverInSpot = existingRoversPosition.find(rover => {\n    return rover.x === newLocation.x && rover.y === newLocation.y;\n  });\n  return !roverInSpot;\n};\n\nfunction App() {\n  _s();\n\n  ///// These will be done in the other file///////\n  const input = [\"1 2 N | LMLMLMLMM\"];\n  const maxTerrainSize = {\n    x: 5,\n    y: 5\n  };\n  const [startPostion, commands] = input[0].split(\"|\");\n  const [x, y, position] = startPostion.split(\" \");\n  const mainCommands = commands.split(\"\");\n  useEffect(() => {\n    fetch(\"/data/data.csv\").then(function (response) {\n      let reader = response.body.getReader();\n      let decoder = new TextDecoder(\"utf-8\");\n      return reader.read().then(function (result) {\n        return decoder.decode(result.value);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/conan/mars_rover/src/App.tsx"],"names":["React","useEffect","Direction","commandLeft","direction","NORTH","WEST","SOUTH","EAST","commandRight","commandForward","currentRoverPosition","position","y","x","isOnMap","state","bounds","newLocation","xmax","ymax","spaceIsEmpty","existingRoversPosition","roverInSpot","find","rover","App","input","maxTerrainSize","startPostion","commands","split","mainCommands","fetch","then","response","reader","body","getReader","decoder","TextDecoder","read","result","decode","value","logo"],"mappings":"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","sourcesContent":["import React, { Reducer, useEffect, useReducer, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Direction, Command } from \"./rover.types\";\nimport Papa from \"papaparse\";\n\nconst commandLeft = (direction: Direction) => {\n  switch (direction) {\n    case Direction.NORTH:\n      return Direction.WEST;\n    case Direction.SOUTH:\n      return Direction.EAST;\n    case Direction.EAST:\n      return Direction.NORTH;\n    case Direction.WEST:\n      return Direction.SOUTH;\n    default:\n      return direction;\n  }\n};\n\nconst commandRight = (direction: Direction) => {\n  switch (direction) {\n    case Direction.NORTH:\n      return Direction.EAST;\n    case Direction.SOUTH:\n      return Direction.WEST;\n    case Direction.EAST:\n      return Direction.SOUTH;\n    case Direction.WEST:\n      return Direction.NORTH;\n    default:\n      return direction;\n  }\n};\n\nconst commandForward = (currentRoverPosition: Rovers) => {\n  switch (currentRoverPosition.position) {\n    case Direction.NORTH:\n      return {\n        ...currentRoverPosition,\n        y: currentRoverPosition.y + 1,\n      };\n    case Direction.SOUTH:\n      return {\n        ...currentRoverPosition,\n\n        y: currentRoverPosition.y - 1,\n      };\n    case Direction.EAST:\n      return {\n        ...currentRoverPosition,\n\n        x: currentRoverPosition.x + 1,\n      };\n    case Direction.WEST:\n      return {\n        ...currentRoverPosition,\n\n        x: currentRoverPosition.x + 1,\n      };\n    default:\n      return currentRoverPosition;\n  }\n};\n\ntype Rovers = {\n  x: number;\n  y: number;\n  position: Direction;\n};\n\ntype State = {\n  existingRoversPosition: Rovers[];\n  roversLeft: Rovers[];\n};\n\ntype Action =\n  | { type: \"turnLeft\" }\n  | { type: \"turnRightcurrentRoverPosition\" }\n  | { type: \"moveForward\" };\n\nconst isOnMap = (state: Rovers, bounds: { x: number; y: number }) => {\n  const newLocation = commandForward(state);\n\n  const xmax = newLocation.x <= bounds.x && newLocation.x >= 0;\n  const ymax = newLocation.y <= bounds.y && newLocation.y >= 0;\n\n  return ymax && xmax;\n};\n\nconst spaceIsEmpty = (\n  existingRoversPosition: Rovers[],\n  currentRoverPosition: Rovers\n) => {\n  const newLocation = commandForward(currentRoverPosition);\n\n  /// loop over and see if any of the other ones are there\n\n  const roverInSpot = existingRoversPosition.find((rover) => {\n    return rover.x === newLocation.x && rover.y === newLocation.y;\n  });\n  return !roverInSpot;\n};\nfunction App() {\n  ///// These will be done in the other file///////\n  const input = [\"1 2 N | LMLMLMLMM\"];\n  const maxTerrainSize = { x: 5, y: 5 };\n  const [startPostion, commands] = input[0].split(\"|\");\n  const [x, y, position] = startPostion.split(\" \");\n  const mainCommands = commands.split(\"\");\n\n  useEffect(() => {\n    fetch(\"/data/data.csv\").then(function (response) {\n      let reader = response.body.getReader();\n      let decoder = new TextDecoder(\"utf-8\");\n\n      return reader.read().then(function (result) {\n        return decoder.decode(result.value);\n      });\n    });\n  });\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}