{"ast":null,"code":"var _jsxFileName = \"/home/conan/mars_rover/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport \"./App.css\";\nimport rover from \"./Rover\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"loaded_rovers\":\n      return { ...state,\n        roversLeft: action.payload\n      };\n\n    case \"change_rovers\":\n      return { ...state,\n        roversLeft: [...state.roversLeft.slice(1)],\n        existingRoversPosition: [...state.existingRoversPosition, action.payload]\n      };\n  }\n}\n\nfunction App() {\n  _s();\n\n  ///// These will be done in the other file///////\n  const maxTerrainSize = {\n    x: 5,\n    y: 5\n  };\n  const [{\n    existingRoversPosition,\n    roversLeft\n  }, dispatch] = useReducer(reducer, {\n    existingRoversPosition: [],\n    roversLeft: []\n  });\n  useEffect(() => {\n    dispatch({\n      type: \"loaded_rovers\",\n      payload: [\"1 2 N | LMLMLMLMM\", \"1 2 N | LMLMLMLMR\"]\n    });\n  }, []);\n\n  if (roversLeft.length > 0) {\n    const currentRover = roversLeft[0];\n    const [startPostion, commands] = currentRover.split(\"|\");\n    const [x, y, position] = startPostion.split(\" \");\n    const mainCommands = commands.split(\"\");\n    const finalPostoin = rover(maxTerrainSize, {\n      x: parseInt(x),\n      y: parseInt(y),\n      position: position\n    }, mainCommands, existingRoversPosition);\n    dispatch({\n      type: \"change_rovers\",\n      payload: finalPostoin\n    });\n  }\n\n  console.log(\"existing\", existingRoversPosition);\n  console.log(\"left\", roversLeft);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [...Array(maxTerrainSize.x)].map((e, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [...Array(maxTerrainSize.y)].map((e, j) => {\n          const roverHere = existingRoversPosition.find(rover => {\n            return rover.x === i && rover.y === j;\n          });\n          return roverHere ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item item2\",\n            children: [\" \", i + \" \" + j]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" item \",\n            children: [\" \", i + \" \" + j, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Knu8R3+I1MbzW4SOb97A+7ext7U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/conan/mars_rover/src/App.tsx"],"names":["React","useEffect","useReducer","rover","reducer","state","action","type","roversLeft","payload","slice","existingRoversPosition","App","maxTerrainSize","x","y","dispatch","length","currentRover","startPostion","commands","split","position","mainCommands","finalPostoin","parseInt","console","log","Array","map","e","i","j","roverHere","find"],"mappings":"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","sourcesContent":["import React, { Reducer, useEffect, useReducer, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Direction, Command, Rovers } from \"./rover.types\";\nimport Papa from \"papaparse\";\nimport rover from \"./Rover\";\n\ntype State = {\n  existingRoversPosition: Rovers[];\n  roversLeft: string[];\n};\n\ntype Action =\n  | { type: \"loaded_rovers\"; payload: string[] }\n  | { type: \"change_rovers\"; payload: Rovers };\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case \"loaded_rovers\":\n      return {\n        ...state,\n        roversLeft: action.payload,\n      };\n    case \"change_rovers\":\n      return {\n        ...state,\n        roversLeft: [...state.roversLeft.slice(1)],\n        existingRoversPosition: [\n          ...state.existingRoversPosition,\n          action.payload,\n        ],\n      };\n  }\n}\n\nfunction App() {\n  ///// These will be done in the other file///////\n  const maxTerrainSize = { x: 5, y: 5 };\n\n  const [{ existingRoversPosition, roversLeft }, dispatch] = useReducer<\n    Reducer<State, Action>\n  >(reducer, {\n    existingRoversPosition: [],\n    roversLeft: [],\n  });\n\n  useEffect(() => {\n    dispatch({\n      type: \"loaded_rovers\",\n      payload: [\"1 2 N | LMLMLMLMM\", \"1 2 N | LMLMLMLMR\"],\n    });\n  }, []);\n\n  if (roversLeft.length > 0) {\n    const currentRover = roversLeft[0];\n    const [startPostion, commands] = currentRover.split(\"|\");\n    const [x, y, position] = startPostion.split(\" \");\n    const mainCommands = commands.split(\"\");\n    const finalPostoin = rover(\n      maxTerrainSize,\n      { x: parseInt(x), y: parseInt(y), position: position as Direction },\n      mainCommands as Command[],\n      existingRoversPosition\n    );\n    dispatch({ type: \"change_rovers\", payload: finalPostoin });\n  }\n\n  console.log(\"existing\", existingRoversPosition);\n  console.log(\"left\", roversLeft);\n\n  return (\n    <div className=\"App\">\n      {[...Array(maxTerrainSize.x)].map((e, i) => {\n        return (\n          <div className=\"container\">\n            {[...Array(maxTerrainSize.y)].map((e, j) => {\n              const roverHere = existingRoversPosition.find((rover) => {\n                return rover.x === i && rover.y === j;\n              });\n              return roverHere ? (\n                <div className=\"item item2\"> {i + \" \" + j}</div>\n              ) : (\n                <div className=\" item \"> {i + \" \" + j} </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}