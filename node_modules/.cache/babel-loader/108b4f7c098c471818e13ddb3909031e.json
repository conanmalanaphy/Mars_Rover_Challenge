{"ast":null,"code":"var _jsxFileName = \"/home/conan/mars_rover/src/App.tsx\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Direction } from \"./rover.types\";\nimport Rover from \"./Rover\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  ///// These will be done in the other file///////\n  const input = \"1 2 N | LMLMLMLMM\";\n  const maxTerrainSize = {\n    x: 5,\n    y: 5\n  };\n  const [startPostion, commands] = input.split(\"| \");\n  const [x, y, position] = startPostion.split(\" \");\n  const mainCommands = commands.split(\"\");\n  const roverPostion = {\n    x: parseInt(x),\n    y: parseInt(y),\n    position: position\n  };\n  const existingRovers = [{\n    x: 1,\n    y: 2,\n    position: Direction.NORTH\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Rover, {\n      maxTerrainSize: maxTerrainSize,\n      startPostion: roverPostion,\n      commands: mainCommands,\n      existingRovers: existingRovers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/conan/mars_rover/src/App.tsx"],"names":["React","Direction","Rover","App","input","maxTerrainSize","x","y","startPostion","commands","split","position","mainCommands","roverPostion","parseInt","existingRovers","NORTH"],"mappings":";AAAA,OAAOA,KAAP,MAAgE,OAAhE;AAEA,OAAO,WAAP;AACA,SAASC,SAAT,QAAmC,eAAnC;AAEA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,SAASC,GAAT,GAAe;AACb;AACA,QAAMC,KAAK,GAAG,mBAAd;AACA,QAAMC,cAAc,GAAG;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAvB;AACA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BL,KAAK,CAACM,KAAN,CAAY,IAAZ,CAAjC;AACA,QAAM,CAACJ,CAAD,EAAIC,CAAJ,EAAOI,QAAP,IAAmBH,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAzB;AACA,QAAME,YAAY,GAAGH,QAAQ,CAACC,KAAT,CAAe,EAAf,CAArB;AAEA,QAAMG,YAAY,GAAG;AACnBP,IAAAA,CAAC,EAAEQ,QAAQ,CAACR,CAAD,CADQ;AAEnBC,IAAAA,CAAC,EAAEO,QAAQ,CAACP,CAAD,CAFQ;AAGnBI,IAAAA,QAAQ,EAAEA;AAHS,GAArB;AAKA,QAAMI,cAAc,GAAG,CACrB;AACET,IAAAA,CAAC,EAAE,CADL;AAEEC,IAAAA,CAAC,EAAE,CAFL;AAGEI,IAAAA,QAAQ,EAAEV,SAAS,CAACe;AAHtB,GADqB,CAAvB;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,KAAD;AACE,MAAA,cAAc,EAAEX,cADlB;AAEE,MAAA,YAAY,EAAEQ,YAFhB;AAGE,MAAA,QAAQ,EAAED,YAHZ;AAIE,MAAA,cAAc,EAAEG;AAJlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;KA/BQZ,G;AAiCT,eAAeA,GAAf","sourcesContent":["import React, { Reducer, useEffect, useReducer, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Direction, Command } from \"./rover.types\";\nimport Papa from \"papaparse\";\nimport Rover from \"./Rover\";\n\nfunction App() {\n  ///// These will be done in the other file///////\n  const input = \"1 2 N | LMLMLMLMM\";\n  const maxTerrainSize = { x: 5, y: 5 };\n  const [startPostion, commands] = input.split(\"| \");\n  const [x, y, position] = startPostion.split(\" \");\n  const mainCommands = commands.split(\"\");\n\n  const roverPostion = {\n    x: parseInt(x),\n    y: parseInt(y),\n    position: position as Direction,\n  };\n  const existingRovers = [\n    {\n      x: 1,\n      y: 2,\n      position: Direction.NORTH,\n    },\n  ];\n\n  return (\n    <div className=\"App\">\n      <Rover\n        maxTerrainSize={maxTerrainSize}\n        startPostion={roverPostion}\n        commands={mainCommands as Command[]}\n        existingRovers={existingRovers}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}