{"ast":null,"code":"var _jsxFileName = \"/home/conan/mars_rover/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Direction, Command } from \"./rover.types\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst fs = require(\"fs\");\n\nconst file = fs.createReadStream(\"rover_instructions.csv\");\n\nconst commandLeft = direction => {\n  switch (direction) {\n    case Direction.NORTH:\n      return Direction.WEST;\n\n    case Direction.SOUTH:\n      return Direction.EAST;\n\n    case Direction.EAST:\n      return Direction.NORTH;\n\n    case Direction.WEST:\n      return Direction.SOUTH;\n\n    default:\n      return direction;\n  }\n};\n\nconst commandRight = direction => {\n  switch (direction) {\n    case Direction.NORTH:\n      return Direction.EAST;\n\n    case Direction.SOUTH:\n      return Direction.WEST;\n\n    case Direction.EAST:\n      return Direction.SOUTH;\n\n    case Direction.WEST:\n      return Direction.NORTH;\n\n    default:\n      return direction;\n  }\n};\n\nconst commandForward = currentRoverPosition => {\n  switch (currentRoverPosition.position) {\n    case Direction.NORTH:\n      return { ...currentRoverPosition,\n        y: currentRoverPosition.y + 1\n      };\n\n    case Direction.SOUTH:\n      return { ...currentRoverPosition,\n        y: currentRoverPosition.y - 1\n      };\n\n    case Direction.EAST:\n      return { ...currentRoverPosition,\n        x: currentRoverPosition.x + 1\n      };\n\n    case Direction.WEST:\n      return { ...currentRoverPosition,\n        x: currentRoverPosition.x + 1\n      };\n\n    default:\n      return currentRoverPosition;\n  }\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"turnLeft\":\n      return { ...state,\n        currentRoverPosition: { ...state.currentRoverPosition,\n          position: commandLeft(state.currentRoverPosition.position)\n        }\n      };\n\n    case \"turnRight\":\n      return { ...state,\n        currentRoverPosition: { ...state.currentRoverPosition,\n          position: commandRight(state.currentRoverPosition.position)\n        }\n      };\n\n    case \"moveForward\":\n      return { ...state,\n        currentRoverPosition: { ...commandForward(state.currentRoverPosition)\n        }\n      };\n  }\n}\n\nconst isOnMap = (state, bounds) => {\n  const newLocation = commandForward(state);\n  const xmax = newLocation.x <= bounds.x && newLocation.x >= 0;\n  const ymax = newLocation.y <= bounds.y && newLocation.y >= 0;\n  return ymax && xmax;\n};\n\nconst spaceIsEmpty = (existingRoversPosition, currentRoverPosition) => {\n  const newLocation = commandForward(currentRoverPosition); /// loop over and see if any of the other ones are there\n\n  const roverInSpot = existingRoversPosition.find(rover => {\n    return rover.x === newLocation.x && rover.y === newLocation.y;\n  });\n  return !roverInSpot;\n};\n\nfunction App() {\n  _s();\n\n  Papa.parse(file, {\n    worker: true,\n    // Don't bog down the main thread if its a big file\n    step: function (result) {// do stuff with result\n    },\n    complete: function (results, file) {\n      console.log(\"parsing complete read\", count, \"records.\");\n    }\n  }); ///// These will be done in the other file///////\n\n  const input = \"1 2 N | LMLMLMLMM\";\n  const maxTerrainSize = {\n    x: 5,\n    y: 5\n  };\n  const [startPostion, commands] = input.split(\"|\");\n  const [x, y, position] = startPostion.split(\" \");\n  const mainCommands = commands.split(\"\"); /// Really where it kicks off ///////\n\n  const [{\n    existingRoversPosition,\n    currentRoverPosition\n  }, dispatch] = useReducer(reducer, {\n    existingRoversPosition: [{\n      x: 1,\n      y: 2,\n      position: Direction.NORTH\n    }],\n    currentRoverPosition: {\n      x: parseInt(x),\n      y: parseInt(y),\n      position: position\n    }\n  });\n  mainCommands.forEach(c => {\n    if (c === Command.TURN_LEFT) {\n      dispatch({\n        type: \"turnLeft\"\n      });\n    } else if (c === Command.TURN_RIGHT) {\n      dispatch({\n        type: \"turnRight\"\n      });\n    } else if (c === Command.MOVE_FORWARD) {\n      if (isOnMap(currentRoverPosition, maxTerrainSize) && spaceIsEmpty(existingRoversPosition, currentRoverPosition)) {\n        dispatch({\n          type: \"moveForward\"\n        });\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qF62N7PoR9oCVITSXSkKOJoZ8bU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/conan/mars_rover/src/App.tsx"],"names":["React","useReducer","Direction","Command","Papa","fs","require","file","createReadStream","commandLeft","direction","NORTH","WEST","SOUTH","EAST","commandRight","commandForward","currentRoverPosition","position","y","x","reducer","state","action","type","isOnMap","bounds","newLocation","xmax","ymax","spaceIsEmpty","existingRoversPosition","roverInSpot","find","rover","App","parse","worker","step","result","complete","results","console","log","count","input","maxTerrainSize","startPostion","commands","split","mainCommands","dispatch","parseInt","forEach","c","TURN_LEFT","TURN_RIGHT","MOVE_FORWARD","logo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAyBC,UAAzB,QAA2C,OAA3C;;AAEA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,eAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;;AACA,MAAMC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGF,EAAE,CAACG,gBAAH,CAAoB,wBAApB,CAAb;;AAEA,MAAMC,WAAW,GAAIC,SAAD,IAA0B;AAC5C,UAAQA,SAAR;AACE,SAAKR,SAAS,CAACS,KAAf;AACE,aAAOT,SAAS,CAACU,IAAjB;;AACF,SAAKV,SAAS,CAACW,KAAf;AACE,aAAOX,SAAS,CAACY,IAAjB;;AACF,SAAKZ,SAAS,CAACY,IAAf;AACE,aAAOZ,SAAS,CAACS,KAAjB;;AACF,SAAKT,SAAS,CAACU,IAAf;AACE,aAAOV,SAAS,CAACW,KAAjB;;AACF;AACE,aAAOH,SAAP;AAVJ;AAYD,CAbD;;AAeA,MAAMK,YAAY,GAAIL,SAAD,IAA0B;AAC7C,UAAQA,SAAR;AACE,SAAKR,SAAS,CAACS,KAAf;AACE,aAAOT,SAAS,CAACY,IAAjB;;AACF,SAAKZ,SAAS,CAACW,KAAf;AACE,aAAOX,SAAS,CAACU,IAAjB;;AACF,SAAKV,SAAS,CAACY,IAAf;AACE,aAAOZ,SAAS,CAACW,KAAjB;;AACF,SAAKX,SAAS,CAACU,IAAf;AACE,aAAOV,SAAS,CAACS,KAAjB;;AACF;AACE,aAAOD,SAAP;AAVJ;AAYD,CAbD;;AAeA,MAAMM,cAAc,GAAIC,oBAAD,IAAkC;AACvD,UAAQA,oBAAoB,CAACC,QAA7B;AACE,SAAKhB,SAAS,CAACS,KAAf;AACE,aAAO,EACL,GAAGM,oBADE;AAELE,QAAAA,CAAC,EAAEF,oBAAoB,CAACE,CAArB,GAAyB;AAFvB,OAAP;;AAIF,SAAKjB,SAAS,CAACW,KAAf;AACE,aAAO,EACL,GAAGI,oBADE;AAGLE,QAAAA,CAAC,EAAEF,oBAAoB,CAACE,CAArB,GAAyB;AAHvB,OAAP;;AAKF,SAAKjB,SAAS,CAACY,IAAf;AACE,aAAO,EACL,GAAGG,oBADE;AAGLG,QAAAA,CAAC,EAAEH,oBAAoB,CAACG,CAArB,GAAyB;AAHvB,OAAP;;AAKF,SAAKlB,SAAS,CAACU,IAAf;AACE,aAAO,EACL,GAAGK,oBADE;AAGLG,QAAAA,CAAC,EAAEH,oBAAoB,CAACG,CAArB,GAAyB;AAHvB,OAAP;;AAKF;AACE,aAAOH,oBAAP;AAzBJ;AA2BD,CA5BD;;AA8CA,SAASI,OAAT,CAAiBC,KAAjB,EAA+BC,MAA/B,EAAsD;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELL,QAAAA,oBAAoB,EAAE,EACpB,GAAGK,KAAK,CAACL,oBADW;AAEpBC,UAAAA,QAAQ,EAAET,WAAW,CAACa,KAAK,CAACL,oBAAN,CAA2BC,QAA5B;AAFD;AAFjB,OAAP;;AAOF,SAAK,WAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELL,QAAAA,oBAAoB,EAAE,EACpB,GAAGK,KAAK,CAACL,oBADW;AAEpBC,UAAAA,QAAQ,EAAEH,YAAY,CAACO,KAAK,CAACL,oBAAN,CAA2BC,QAA5B;AAFF;AAFjB,OAAP;;AAOF,SAAK,aAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELL,QAAAA,oBAAoB,EAAE,EACpB,GAAGD,cAAc,CAACM,KAAK,CAACL,oBAAP;AADG;AAFjB,OAAP;AAlBJ;AAyBD;;AAED,MAAMQ,OAAO,GAAG,CAACH,KAAD,EAAgBI,MAAhB,KAAqD;AACnE,QAAMC,WAAW,GAAGX,cAAc,CAACM,KAAD,CAAlC;AAEA,QAAMM,IAAI,GAAGD,WAAW,CAACP,CAAZ,IAAiBM,MAAM,CAACN,CAAxB,IAA6BO,WAAW,CAACP,CAAZ,IAAiB,CAA3D;AACA,QAAMS,IAAI,GAAGF,WAAW,CAACR,CAAZ,IAAiBO,MAAM,CAACP,CAAxB,IAA6BQ,WAAW,CAACR,CAAZ,IAAiB,CAA3D;AAEA,SAAOU,IAAI,IAAID,IAAf;AACD,CAPD;;AASA,MAAME,YAAY,GAAG,CACnBC,sBADmB,EAEnBd,oBAFmB,KAGhB;AACH,QAAMU,WAAW,GAAGX,cAAc,CAACC,oBAAD,CAAlC,CADG,CAGH;;AAEA,QAAMe,WAAW,GAAGD,sBAAsB,CAACE,IAAvB,CAA6BC,KAAD,IAAW;AACzD,WAAOA,KAAK,CAACd,CAAN,KAAYO,WAAW,CAACP,CAAxB,IAA6Bc,KAAK,CAACf,CAAN,KAAYQ,WAAW,CAACR,CAA5D;AACD,GAFmB,CAApB;AAGA,SAAO,CAACa,WAAR;AACD,CAZD;;AAaA,SAASG,GAAT,GAAe;AAAA;;AACb/B,EAAAA,IAAI,CAACgC,KAAL,CAAW7B,IAAX,EAAiB;AACf8B,IAAAA,MAAM,EAAE,IADO;AACD;AACdC,IAAAA,IAAI,EAAE,UAAUC,MAAV,EAAkB,CACtB;AACD,KAJc;AAKfC,IAAAA,QAAQ,EAAE,UAAUC,OAAV,EAAmBlC,IAAnB,EAAyB;AACjCmC,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCC,KAArC,EAA4C,UAA5C;AACD;AAPc,GAAjB,EADa,CAWb;;AACA,QAAMC,KAAK,GAAG,mBAAd;AACA,QAAMC,cAAc,GAAG;AAAE1B,IAAAA,CAAC,EAAE,CAAL;AAAQD,IAAAA,CAAC,EAAE;AAAX,GAAvB;AACA,QAAM,CAAC4B,YAAD,EAAeC,QAAf,IAA2BH,KAAK,CAACI,KAAN,CAAY,GAAZ,CAAjC;AACA,QAAM,CAAC7B,CAAD,EAAID,CAAJ,EAAOD,QAAP,IAAmB6B,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAzB;AACA,QAAMC,YAAY,GAAGF,QAAQ,CAACC,KAAT,CAAe,EAAf,CAArB,CAhBa,CAkBb;;AACA,QAAM,CAAC;AAAElB,IAAAA,sBAAF;AAA0Bd,IAAAA;AAA1B,GAAD,EAAmDkC,QAAnD,IACJlD,UAAU,CAAyBoB,OAAzB,EAAkC;AAC1CU,IAAAA,sBAAsB,EAAE,CACtB;AACEX,MAAAA,CAAC,EAAE,CADL;AAEED,MAAAA,CAAC,EAAE,CAFL;AAGED,MAAAA,QAAQ,EAAEhB,SAAS,CAACS;AAHtB,KADsB,CADkB;AAQ1CM,IAAAA,oBAAoB,EAAE;AACpBG,MAAAA,CAAC,EAAEgC,QAAQ,CAAChC,CAAD,CADS;AAEpBD,MAAAA,CAAC,EAAEiC,QAAQ,CAACjC,CAAD,CAFS;AAGpBD,MAAAA,QAAQ,EAAEA;AAHU;AARoB,GAAlC,CADZ;AAgBAgC,EAAAA,YAAY,CAACG,OAAb,CAAsBC,CAAD,IAAO;AAC1B,QAAIA,CAAC,KAAKnD,OAAO,CAACoD,SAAlB,EAA6B;AAC3BJ,MAAAA,QAAQ,CAAC;AAAE3B,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFD,MAEO,IAAI8B,CAAC,KAAKnD,OAAO,CAACqD,UAAlB,EAA8B;AACnCL,MAAAA,QAAQ,CAAC;AAAE3B,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFM,MAEA,IAAI8B,CAAC,KAAKnD,OAAO,CAACsD,YAAlB,EAAgC;AACrC,UACEhC,OAAO,CAACR,oBAAD,EAAuB6B,cAAvB,CAAP,IACAhB,YAAY,CAACC,sBAAD,EAAyBd,oBAAzB,CAFd,EAGE;AACAkC,QAAAA,QAAQ,CAAC;AAAE3B,UAAAA,IAAI,EAAE;AAAR,SAAD,CAAR;AACD;AACF;AACF,GAbD;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEkC,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApEQvB,G;;KAAAA,G;AAsET,eAAeA,GAAf","sourcesContent":["import React, { Reducer, useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Direction, Command } from \"./rover.types\";\nimport Papa from \"papaparse\";\nconst fs = require(\"fs\");\nconst file = fs.createReadStream(\"rover_instructions.csv\");\n\nconst commandLeft = (direction: Direction) => {\n  switch (direction) {\n    case Direction.NORTH:\n      return Direction.WEST;\n    case Direction.SOUTH:\n      return Direction.EAST;\n    case Direction.EAST:\n      return Direction.NORTH;\n    case Direction.WEST:\n      return Direction.SOUTH;\n    default:\n      return direction;\n  }\n};\n\nconst commandRight = (direction: Direction) => {\n  switch (direction) {\n    case Direction.NORTH:\n      return Direction.EAST;\n    case Direction.SOUTH:\n      return Direction.WEST;\n    case Direction.EAST:\n      return Direction.SOUTH;\n    case Direction.WEST:\n      return Direction.NORTH;\n    default:\n      return direction;\n  }\n};\n\nconst commandForward = (currentRoverPosition: Rovers) => {\n  switch (currentRoverPosition.position) {\n    case Direction.NORTH:\n      return {\n        ...currentRoverPosition,\n        y: currentRoverPosition.y + 1,\n      };\n    case Direction.SOUTH:\n      return {\n        ...currentRoverPosition,\n\n        y: currentRoverPosition.y - 1,\n      };\n    case Direction.EAST:\n      return {\n        ...currentRoverPosition,\n\n        x: currentRoverPosition.x + 1,\n      };\n    case Direction.WEST:\n      return {\n        ...currentRoverPosition,\n\n        x: currentRoverPosition.x + 1,\n      };\n    default:\n      return currentRoverPosition;\n  }\n};\n\ntype Rovers = {\n  x: number;\n  y: number;\n  position: Direction;\n};\n\ntype State = {\n  existingRoversPosition: Rovers[];\n  currentRoverPosition: Rovers;\n};\n\ntype Action =\n  | { type: \"turnLeft\" }\n  | { type: \"turnRight\" }\n  | { type: \"moveForward\" };\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case \"turnLeft\":\n      return {\n        ...state,\n        currentRoverPosition: {\n          ...state.currentRoverPosition,\n          position: commandLeft(state.currentRoverPosition.position),\n        },\n      };\n    case \"turnRight\":\n      return {\n        ...state,\n        currentRoverPosition: {\n          ...state.currentRoverPosition,\n          position: commandRight(state.currentRoverPosition.position),\n        },\n      };\n    case \"moveForward\":\n      return {\n        ...state,\n        currentRoverPosition: {\n          ...commandForward(state.currentRoverPosition),\n        },\n      };\n  }\n}\n\nconst isOnMap = (state: Rovers, bounds: { x: number; y: number }) => {\n  const newLocation = commandForward(state);\n\n  const xmax = newLocation.x <= bounds.x && newLocation.x >= 0;\n  const ymax = newLocation.y <= bounds.y && newLocation.y >= 0;\n\n  return ymax && xmax;\n};\n\nconst spaceIsEmpty = (\n  existingRoversPosition: Rovers[],\n  currentRoverPosition: Rovers\n) => {\n  const newLocation = commandForward(currentRoverPosition);\n\n  /// loop over and see if any of the other ones are there\n\n  const roverInSpot = existingRoversPosition.find((rover) => {\n    return rover.x === newLocation.x && rover.y === newLocation.y;\n  });\n  return !roverInSpot;\n};\nfunction App() {\n  Papa.parse(file, {\n    worker: true, // Don't bog down the main thread if its a big file\n    step: function (result) {\n      // do stuff with result\n    },\n    complete: function (results, file) {\n      console.log(\"parsing complete read\", count, \"records.\");\n    },\n  });\n\n  ///// These will be done in the other file///////\n  const input = \"1 2 N | LMLMLMLMM\";\n  const maxTerrainSize = { x: 5, y: 5 };\n  const [startPostion, commands] = input.split(\"|\");\n  const [x, y, position] = startPostion.split(\" \");\n  const mainCommands = commands.split(\"\");\n\n  /// Really where it kicks off ///////\n  const [{ existingRoversPosition, currentRoverPosition }, dispatch] =\n    useReducer<Reducer<State, Action>>(reducer, {\n      existingRoversPosition: [\n        {\n          x: 1,\n          y: 2,\n          position: Direction.NORTH,\n        },\n      ],\n      currentRoverPosition: {\n        x: parseInt(x),\n        y: parseInt(y),\n        position: position as Direction,\n      },\n    });\n\n  mainCommands.forEach((c) => {\n    if (c === Command.TURN_LEFT) {\n      dispatch({ type: \"turnLeft\" });\n    } else if (c === Command.TURN_RIGHT) {\n      dispatch({ type: \"turnRight\" });\n    } else if (c === Command.MOVE_FORWARD) {\n      if (\n        isOnMap(currentRoverPosition, maxTerrainSize) &&\n        spaceIsEmpty(existingRoversPosition, currentRoverPosition)\n      ) {\n        dispatch({ type: \"moveForward\" });\n      }\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}