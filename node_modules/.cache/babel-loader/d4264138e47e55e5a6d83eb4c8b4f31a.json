{"ast":null,"code":"var _jsxFileName = \"/home/conan/mars_rover/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\"; /// is on map\n// is valid position -- other rover there\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"turnLeft\":\n      return { ...state\n      };\n\n    case \"turnRight\":\n      return { ...state\n      };\n\n    case \"moveForward\":\n      return { ...state\n      };\n  }\n}\n\nfunction App() {\n  _s();\n\n  const input = \"1 2 N | LMLMLMLMM\";\n  const maxTerrainSize = {\n    x: 5,\n    y: 5\n  };\n  const [startPostion, commands] = input.split(\"|\");\n  const [x, y, position] = startPostion.split(\" \");\n  const [{\n    existingRoversPosition,\n    currentRoverPosition\n  }, dispatch] = useReducer(reducer, {\n    existingRoversPosition: [{\n      x: 1,\n      y: 2,\n      position: \"N\"\n    }],\n    currentRoverPosition: {\n      x: parseInt(x),\n      y: parseInt(y),\n      position: position\n    }\n  });\n  commands.split(\"\").forEach(c => {\n    if (c === \"L\") {\n      dispatch({\n        type: \"turnLeft\"\n      });\n    } else if (c === \"R\") {\n      dispatch({\n        type: \"turnRight\"\n      });\n    } else if (c === \"M\") {\n      dispatch({\n        type: \"moveForward\"\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.tsx\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"LAqOAn8o3gzTcxrgG5BvbQi1Ris=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/conan/mars_rover/src/App.tsx"],"names":["React","useReducer","reducer","state","action","type","App","input","maxTerrainSize","x","y","startPostion","commands","split","position","existingRoversPosition","currentRoverPosition","dispatch","parseInt","forEach","c","logo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAyBC,UAAzB,QAAqD,OAArD;;AAEA,OAAO,WAAP,C,CAEA;AACA;;;;AAkBA,SAASC,OAAT,CAAiBC,KAAjB,EAA+BC,MAA/B,EAAsD;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,UAAL;AACE,aAAO,EAAE,GAAGF;AAAL,OAAP;;AACF,SAAK,WAAL;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGA;AAAL,OAAP;AANJ;AAQD;;AACD,SAASG,GAAT,GAAe;AAAA;;AACb,QAAMC,KAAK,GAAG,mBAAd;AACA,QAAMC,cAAc,GAAG;AAAEC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAvB;AAEA,QAAM,CAACC,YAAD,EAAeC,QAAf,IAA2BL,KAAK,CAACM,KAAN,CAAY,GAAZ,CAAjC;AAEA,QAAM,CAACJ,CAAD,EAAIC,CAAJ,EAAOI,QAAP,IAAmBH,YAAY,CAACE,KAAb,CAAmB,GAAnB,CAAzB;AAEA,QAAM,CAAC;AAAEE,IAAAA,sBAAF;AAA0BC,IAAAA;AAA1B,GAAD,EAAmDC,QAAnD,IACJhB,UAAU,CAAyBC,OAAzB,EAAkC;AAC1Ca,IAAAA,sBAAsB,EAAE,CACtB;AACEN,MAAAA,CAAC,EAAE,CADL;AAEEC,MAAAA,CAAC,EAAE,CAFL;AAGEI,MAAAA,QAAQ,EAAE;AAHZ,KADsB,CADkB;AAQ1CE,IAAAA,oBAAoB,EAAE;AACpBP,MAAAA,CAAC,EAAES,QAAQ,CAACT,CAAD,CADS;AAEpBC,MAAAA,CAAC,EAAEQ,QAAQ,CAACR,CAAD,CAFS;AAGpBI,MAAAA,QAAQ,EAAEA;AAHU;AARoB,GAAlC,CADZ;AAgBAF,EAAAA,QAAQ,CAACC,KAAT,CAAe,EAAf,EAAmBM,OAAnB,CAA4BC,CAAD,IAAO;AAChC,QAAIA,CAAC,KAAK,GAAV,EAAe;AACbH,MAAAA,QAAQ,CAAC;AAAEZ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFD,MAEO,IAAIe,CAAC,KAAK,GAAV,EAAe;AACpBH,MAAAA,QAAQ,CAAC;AAAEZ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAFM,MAEA,IAAIe,CAAC,KAAK,GAAV,EAAe;AACpBH,MAAAA,QAAQ,CAAC;AAAEZ,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;AACF,GARD;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEgB,IAAV;AAAgB,QAAA,SAAS,EAAC,UAA1B;AAAqC,QAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,yCACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADP;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE;AACE,QAAA,SAAS,EAAC,UADZ;AAEE,QAAA,IAAI,EAAC,qBAFP;AAGE,QAAA,MAAM,EAAC,QAHT;AAIE,QAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GApDQf,G;;KAAAA,G;AAsDT,eAAeA,GAAf","sourcesContent":["import React, { Reducer, useReducer, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\n/// is on map\n// is valid position -- other rover there\n\ntype Rovers = {\n  x: number;\n  y: number;\n  position: string;\n};\n\ntype State = {\n  existingRoversPosition: Rovers[];\n  currentRoverPosition: Rovers;\n};\n\ntype Action =\n  | { type: \"turnLeft\" }\n  | { type: \"turnRight\" }\n  | { type: \"moveForward\" };\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case \"turnLeft\":\n      return { ...state };\n    case \"turnRight\":\n      return { ...state };\n    case \"moveForward\":\n      return { ...state };\n  }\n}\nfunction App() {\n  const input = \"1 2 N | LMLMLMLMM\";\n  const maxTerrainSize = { x: 5, y: 5 };\n\n  const [startPostion, commands] = input.split(\"|\");\n\n  const [x, y, position] = startPostion.split(\" \");\n\n  const [{ existingRoversPosition, currentRoverPosition }, dispatch] =\n    useReducer<Reducer<State, Action>>(reducer, {\n      existingRoversPosition: [\n        {\n          x: 1,\n          y: 2,\n          position: \"N\",\n        },\n      ],\n      currentRoverPosition: {\n        x: parseInt(x),\n        y: parseInt(y),\n        position: position,\n      },\n    });\n\n  commands.split(\"\").forEach((c) => {\n    if (c === \"L\") {\n      dispatch({ type: \"turnLeft\" });\n    } else if (c === \"R\") {\n      dispatch({ type: \"turnRight\" });\n    } else if (c === \"M\") {\n      dispatch({ type: \"moveForward\" });\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}