{"ast":null,"code":"var _jsxFileName = \"/home/conan/mars_rover/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useReducer } from \"react\";\nimport \"./App.css\";\nimport rover from \"./Rover\";\nimport Papa from \"papaparse\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"loaded_rovers\":\n      return { ...state,\n        roversLeft: action.payload\n      };\n\n    case \"change_rovers\":\n      return { ...state,\n        roversLeft: [...state.roversLeft.slice(1)],\n        existingRoversPosition: [...state.existingRoversPosition, action.payload]\n      };\n  }\n}\n\nfunction App() {\n  _s();\n\n  ///// These will be done in the other file///////\n  const maxTerrainSize = {\n    x: 5,\n    y: 5\n  };\n  const [{\n    existingRoversPosition,\n    roversLeft\n  }, dispatch] = useReducer(reducer, {\n    existingRoversPosition: [],\n    roversLeft: []\n  });\n  useEffect(() => {\n    async function fetchCsv() {\n      const response = await fetch(\"rover_instructions.csv\");\n\n      if (response.body != null) {\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder(\"utf-8\");\n        const csv = await decoder.decode(result.value);\n        console.log(\"csv\", csv);\n        return csv;\n      }\n\n      return \"csv\";\n    }\n\n    async function GetData() {\n      const data = Papa.parse(await fetchCsv(), {\n        skipEmptyLines: true,\n        transformHeader: function (h) {\n          return h.replace(/['“]+/g, \"\");\n        }\n      });\n      console.log(data);\n      return data;\n    }\n\n    GetData();\n    dispatch({\n      type: \"loaded_rovers\",\n      payload: [\"1 2 N | LMLMLMLMM\", \"1 2 N | LMLMLMLMR\"]\n    });\n  }, []);\n\n  if (roversLeft.length > 0) {\n    const currentRover = roversLeft[0];\n    const [startPostion, commands] = currentRover.split(\"|\");\n    const [x, y, position] = startPostion.split(\" \");\n    const mainCommands = commands.split(\"\");\n    const finalPostoin = rover(maxTerrainSize, {\n      x: parseInt(x),\n      y: parseInt(y),\n      position: position\n    }, mainCommands, existingRoversPosition);\n    dispatch({\n      type: \"change_rovers\",\n      payload: finalPostoin\n    });\n  }\n\n  console.log(\"existing\", existingRoversPosition);\n  console.log(\"left\", roversLeft);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [...Array(maxTerrainSize.x)].map((e, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [...Array(maxTerrainSize.y)].map((e, j) => {\n          const roverHere = existingRoversPosition.find(rover => {\n            return rover.x === i && rover.y === j;\n          });\n          return roverHere ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item item2\",\n            children: [\" \", i + \" \" + j]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" item \",\n            children: [\" \", i + \" \" + j, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Knu8R3+I1MbzW4SOb97A+7ext7U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/conan/mars_rover/src/App.tsx"],"names":["React","useEffect","useReducer","rover","Papa","reducer","state","action","type","roversLeft","payload","slice","existingRoversPosition","App","maxTerrainSize","x","y","dispatch","fetchCsv","response","fetch","body","reader","getReader","result","read","decoder","TextDecoder","csv","decode","value","console","log","GetData","data","parse","skipEmptyLines","transformHeader","h","replace","length","currentRover","startPostion","commands","split","position","mainCommands","finalPostoin","parseInt","Array","map","e","i","j","roverHere","find"],"mappings":"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","sourcesContent":["import React, { Reducer, useEffect, useReducer } from \"react\";\nimport \"./App.css\";\nimport rover from \"./Rover\";\nimport { Command, Direction, Rovers } from \"./rover.types\";\nimport Papa from \"papaparse\";\ntype State = {\n  existingRoversPosition: Rovers[];\n  roversLeft: string[];\n};\n\ntype Action =\n  | { type: \"loaded_rovers\"; payload: string[] }\n  | { type: \"change_rovers\"; payload: Rovers };\n\nfunction reducer(state: State, action: Action): State {\n  switch (action.type) {\n    case \"loaded_rovers\":\n      return {\n        ...state,\n        roversLeft: action.payload,\n      };\n    case \"change_rovers\":\n      return {\n        ...state,\n        roversLeft: [...state.roversLeft.slice(1)],\n        existingRoversPosition: [\n          ...state.existingRoversPosition,\n          action.payload,\n        ],\n      };\n  }\n}\n\nfunction App() {\n  ///// These will be done in the other file///////\n  const maxTerrainSize = { x: 5, y: 5 };\n\n  const [{ existingRoversPosition, roversLeft }, dispatch] = useReducer<\n    Reducer<State, Action>\n  >(reducer, {\n    existingRoversPosition: [],\n    roversLeft: [],\n  });\n\n  useEffect(() => {\n    async function fetchCsv() {\n      const response = await fetch(\"rover_instructions.csv\");\n      if (response.body != null) {\n        const reader = response.body.getReader();\n        const result = await reader.read();\n        const decoder = new TextDecoder(\"utf-8\");\n        const csv = await decoder.decode(result.value);\n        console.log(\"csv\", csv);\n        return csv;\n      }\n      return \"csv\";\n    }\n    async function GetData() {\n      const data = Papa.parse(await fetchCsv(), {\n        skipEmptyLines: true,\n        transformHeader: function (h) {\n          return h.replace(/['“]+/g, \"\");\n        },\n      });\n      console.log(data);\n      return data;\n    }\n\n    GetData();\n    dispatch({\n      type: \"loaded_rovers\",\n      payload: [\"1 2 N | LMLMLMLMM\", \"1 2 N | LMLMLMLMR\"],\n    });\n  }, []);\n\n  if (roversLeft.length > 0) {\n    const currentRover = roversLeft[0];\n    const [startPostion, commands] = currentRover.split(\"|\");\n    const [x, y, position] = startPostion.split(\" \");\n    const mainCommands = commands.split(\"\");\n    const finalPostoin = rover(\n      maxTerrainSize,\n      { x: parseInt(x), y: parseInt(y), position: position as Direction },\n      mainCommands as Command[],\n      existingRoversPosition\n    );\n    dispatch({ type: \"change_rovers\", payload: finalPostoin });\n  }\n\n  console.log(\"existing\", existingRoversPosition);\n  console.log(\"left\", roversLeft);\n\n  return (\n    <div className=\"App\">\n      {[...Array(maxTerrainSize.x)].map((e, i) => {\n        return (\n          <div className=\"container\">\n            {[...Array(maxTerrainSize.y)].map((e, j) => {\n              const roverHere = existingRoversPosition.find((rover) => {\n                return rover.x === i && rover.y === j;\n              });\n              return roverHere ? (\n                <div className=\"item item2\"> {i + \" \" + j}</div>\n              ) : (\n                <div className=\" item \"> {i + \" \" + j} </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}